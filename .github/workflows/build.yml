name: 'Hello World'
description: 'Greet someone and record the time'
inputs:
  who-to-greet:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
outputs:
  time: # id of output
    description: 'The time we greeted you'
runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.who-to-greet }}

# name: Build
# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     types: [opened, synchronize, reopened]
# runs:
#   using: 'docker'
#   image: 'Dockerfile'
#   run: |
#     echo 123
# jobs:
#   build:
#     name: Build
#     using: docker
#     image: Dockerfile
#     runs-on: ubuntu-latest
#     env:
#       SONAR_SCANNER_VERSION: 4.7.0.2747
#       SONAR_SERVER_URL: "https://sonarcloud.io"
#       BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       # - name: Set up JDK 11
#       #   uses: actions/setup-java@v1
#       #   with:
#       #     java-version: 11
#       - name: Download and set up sonar-scanner
#         env:
#           SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
#         run: |
#           mkdir -p $HOME/.sonar
#           curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
#           unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
#           echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
#       - name: Download and set up build-wrapper
#         env:
#           BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
#         run: |
#           curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
#           unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
#           echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
#       - name: Run gcov
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: |
#           sudo apt install gcovr
#           gcovr -j 8 --gcov-executable gcov --sonarqube ./build/code_coverage.xml --root . ./build
#       # - name: Run sonar-scanner
#       #   env:
#       #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#       #   run: |
#       #     sonar-scanner -X --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" -Dsonar.projectKey=swift-nav_swiftnav-ros2 -Dsonar.organization=swift-nav -Dsonar.cfamily.cache.enabled=false
